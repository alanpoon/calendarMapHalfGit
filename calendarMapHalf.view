<<<<<<<=view-json=
{
  "id":"calendarMapHalf",
  "name":"CalendarMapHalf",
  "category":"Chart",
  "default":{
    "jsonClass":"View",
    "elxType":"View",
    "vtype":"bundle",
    "state":"visible",
    "isContainer":false,
    "position":{
      "jsonClass":"Position",
      "elxType":"Position",
      "height":"480",
      "width":"1100",
      "zIndex":"auto"
    },
    "data":{
      "jsonClass":"DataEmbedded",
      "datasource":{
        "jsonClass":"DataSource",
        "name":"initData",
        "stype":"Data",
        "desc":"default data",
        "schema":{
          "jsonClass":"Schema",
          "caseSensitive":false,
          "columns":[{
            "jsonClass":"SchemaColumn",
            "name":"Event",
            "dtype":"String",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"Start_of_Leave",
            "dtype":"Date",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"Num_Duration",
            "dtype":"Double",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"Num_of_Days",
            "dtype":"Double",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"Leave_Type",
            "dtype":"String",
            "attrs":[]
          },{
            "jsonClass":"SchemaColumn",
            "name":"Partial",
            "dtype":"String",
            "attrs":[]
          }]
        },
        "data":{
          "jsonClass":"DataRecords",
          "records":[
          {
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2016-06-01"
              },{
              "jsonClass":"Field",
              "value":3.5
              },{
              "jsonClass":"Field",
              "value":3.5
              },{
              "jsonClass":"Field",
            "value":"Annual"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP002"
              },{
              "jsonClass":"Field",
            "value":"2015-08-13"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Child Care"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP003"
              },{
              "jsonClass":"Field",
            "value":"2015-10-28"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Compassionate"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2015-10-09"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Hospitalisation"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP002"
              },{
              "jsonClass":"Field",
            "value":"2015-11-05"
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
            "value":"Marriage"
              },{
              "jsonClass":"Field",
            "value":"PM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP003"
              },{
              "jsonClass":"Field",
            "value":"2015-12-06"
              },{
              "jsonClass":"Field",
              "value":3
              },{
              "jsonClass":"Field",
              "value":3
              },{
              "jsonClass":"Field",
            "value":"Medical"
              },{
              "jsonClass":"Field",
            "value":"PM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2015-12-22"
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
            "value":"National Service"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2015-12-26"
              },{
              "jsonClass":"Field",
              "value":2.5
              },{
              "jsonClass":"Field",
              "value":2.5
              },{
              "jsonClass":"Field",
            "value":"No Pay"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP004"
              },{
              "jsonClass":"Field",
            "value":"2015-07-14"
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
            "value":"Off-In-Lieu"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP005"
              },{
              "jsonClass":"Field",
            "value":"2015-04-15"
              },{
              "jsonClass":"Field",
              "value":7
              },{
              "jsonClass":"Field",
              "value":6
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP006"
              },{
              "jsonClass":"Field",
            "value":"2015-01-12"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP007"
              },{
              "jsonClass":"Field",
            "value":"2014-12-13"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2014-08-05"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP002"
              },{
              "jsonClass":"Field",
            "value":"2014-10-16"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"PM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP003"
              },{
              "jsonClass":"Field",
            "value":"2014-05-09"
              },{
              "jsonClass":"Field",
              "value":3
              },{
              "jsonClass":"Field",
              "value":3
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"PM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2015-10-05"
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP002"
              },{
              "jsonClass":"Field",
            "value":"2014-02-06"
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP003"
              },{
              "jsonClass":"Field",
            "value":"2014-07-27"
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2014-12-21"
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
              "value":1
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP001"
              },{
              "jsonClass":"Field",
            "value":"2014-07-23"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP004"
              },{
              "jsonClass":"Field",
            "value":"2015-04-15"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP005"
              },{
              "jsonClass":"Field",
            "value":"2015-02-12"
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
              "value":2
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"FULL"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP006"
              },{
              "jsonClass":"Field",
            "value":"2014-08-13"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            },{
            "jsonClass":"Record",
            "fields":[{
              "jsonClass":"Field",
            "value":"EMP007"
              },{
              "jsonClass":"Field",
            "value":"2014-08-04"
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
              "value":0.5
              },{
              "jsonClass":"Field",
            "value":"Urgent"
              },{
              "jsonClass":"Field",
            "value":"AM"
              }]
            }]
        }
      },
      "directive":""
    },
    "typeinfo":{
      "jsonClass":"Bundle",
      "type":"calendarMapHalf",
      "data":{
        "startTimeCol":"Start_of_Leave",
        "leaveTypeCol":"Leave_Type",
        "durationCol":"Num_Duration",
		"numOfDaysCol":"Num_of_Days",
        "eventCol":"Event",
        "partialCol":"Partial"
      },
      "url":"repository:/HCBI_20140815/datasource/data/3a1HolidayCSV.csv",
      "width":980,
      "height":190,
      "cellSize":17,
      "legendSpacing":120,
      "legendArr":"Marriage,Urgent,Annual,Child Care,Compassionate,Hospitalisation,Holiday,Medical,National Service,No Pay,Off-In-Lieu,Sunday",
      "formatDate":"%e-%m-%Y"
    }
  },
  "includes":["/elx/lib/d3.v3.min.js"],
  "edit-section":[{
    "id":"view",
    "name":"View"
  },{
    "id":"data",
    "name":"Data"
  },{
    "id":"calendarMapHalf",
    "name":"CalendarMapHalf"
  },{
    "id":"filters",
    "name":"Filters"
  }]
}
========
<<<<<<<=edit-json=
{
  "jsonClass":"ViewSectionGroup",
  "id":"calendarMapHalf",
  "groups":[{
    "jsonClass":"Group",
    "label":"Data",
    "rows":[{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-height-label",
        "type":"label",
        "text":"Chart Height"
      },{
        "jsonClass":"Field",
        "id":"typeinfo-height",
        "type":"field",
        "value":"${typeinfo.height}",
        "readonly":false
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-width-label",
        "type":"label",
        "text":"Chart Width"
      },{
        "jsonClass":"Field",
        "id":"typeinfo-width",
        "type":"field",
        "value":"${typeinfo.width}",
        "readonly":false
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-url-label",
        "type":"label",
        "text":"Holiday csv URL"
      },{
        "jsonClass":"Field",
        "id":"typeinfo-url",
        "type":"field",
        "value":"${typeinfo.url}",
        "readonly":false
      },{
        "jsonClass":"Button",
        "id":"typeinfo-url-repo-button",
        "type":"button",
        "text":"Repository"
      }]
    }]
  },{
    "jsonClass":"Group",
    "label":"Title",
    "rows":[{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-startTimeCol-label",
        "type":"label",
        "text":"StartTime Column"
      },{
        "jsonClass":"SchemaColumnSelect",
        "id":"typeinfo-startTimeCol",
        "type":"select-schema-column",
        "value":"${typeinfo.startTimeCol}"
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-leaveTypeCol-label",
        "type":"label",
        "text":"LeaveType Column"
      },{
        "jsonClass":"SchemaColumnSelect",
        "id":"typeinfo-leaveTypeCol",
        "type":"select-schema-column",
        "value":"${typeinfo.leaveTypeCol}"
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-durationCol-label",
        "type":"label",
        "text":"Duration Column"
      },{
        "jsonClass":"SchemaColumnSelect",
        "id":"typeinfo-durationCol",
        "type":"select-schema-column",
        "value":"${typeinfo.durationCol}"
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-numOfDaysCol-label",
        "type":"label",
        "text":"Number of Days Column"
      },{
        "jsonClass":"SchemaColumnSelect",
        "id":"typeinfo-numOfDaysCol",
        "type":"select-schema-column",
        "value":"${typeinfo.numOfDaysCol}"
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-eventCol-label",
        "type":"label",
        "text":"Event Column"
      },{
        "jsonClass":"SchemaColumnSelect",
        "id":"typeinfo-eventCol",
        "type":"select-schema-column",
        "value":"${typeinfo.eventCol}"
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-partialCol-label",
        "type":"label",
        "text":"PartialDay Column"
      },{
        "jsonClass":"SchemaColumnSelect",
        "id":"typeinfo-partialCol",
        "type":"select-schema-column",
        "value":"${typeinfo.partialCol}"
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-cellSize-label",
        "type":"label",
        "text":"Cell Size"
      },{
        "jsonClass":"Field",
        "id":"typeinfo-cellSize",
        "type":"field",
        "value":"${typeinfo.cellSize}",
        "readonly":false
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-legendSpacing-label",
        "type":"label",
        "text":"Legend Spacing"
      },{
        "jsonClass":"Field",
        "id":"typeinfo-legendSpacing",
        "type":"field",
        "value":"${typeinfo.legendSpacing}",
        "readonly":false
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-legendArr-label",
        "type":"label",
        "text":"Legend Arr"
      },{
        "jsonClass":"Field",
        "id":"typeinfo-legendArr",
        "type":"field",
        "value":"${typeinfo.legendArr}",
        "readonly":false
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-formatDate-label",
        "type":"label",
        "text":"FormatDate "
      },{
        "jsonClass":"Field",
        "id":"typeinfo-formatDate",
        "type":"field",
        "value":"${typeinfo.formatDate}",
        "readonly":false
      }]
    }]
  }]
}
========
<<<<<<<=edit-js=
elx.bundle.type.calendarMapHalf = {

  	init : function(view) {
      

      var urlHandler = elx.host.utils.initRepositoryButtonHandler($("#typeinfo-url"),"Choose CSV",
                                                       "csv");
  	  elx.host.utils.initSectionGroups(view,$("#calendarMapHalf-div"));         
  	$("#typeinfo-url-repo-button").click(function(){
  		urlHandler();
      
  	});
  
          $("#typeinfo-startTimeCol").val(view.typeinfo.data.startTimeCol);
      $("#typeinfo-leaveTypeCol").val(view.typeinfo.data.leaveTypeCol);
       $("#typeinfo-durationCol").val(view.typeinfo.data.durationCol);
       $("#typeinfo-numOfDaysCol").val(view.typeinfo.data.numOfDaysCol);
       $("#typeinfo-eventCol").val(view.typeinfo.data.eventCol);
       $("#typeinfo-partialCol").val(view.typeinfo.data.partialCol);
      
	},

	validate : function(view) {
		return true;
	},

	save : function(view) {
      
   	elx.host.utils.saveProperties(view.typeinfo);
        var newUrl =  $.trim($("#typeinfo-url").val());
      	view.typeinfo.url=newUrl;
      	var dEvent = $("#typeinfo-eventCol").val();
		view.typeinfo.data.eventCol = dEvent;
      	var dStartTime = $("#typeinfo-startTimeCol").val();
		view.typeinfo.data.startTimeCol = dStartTime;
      	var dLeaveType = $("#typeinfo-leaveTypeCol").val();
		view.typeinfo.data.leaveTypeCol = dLeaveType;
      	var dDuration = $("#typeinfo-durationCol").val();
		view.typeinfo.data.durationCol = dDuration;
		var dNumOfDays = $("#typeinfo-numOfDaysCol").val();
		view.typeinfo.data.numOfDaysCol = dNumOfDays;
       var dPartial = $("#typeinfo-partialCol").val();
      view.typeinfo.data.partialCol = dPartial;
    }
	
}
========
<<<<<<<=view-html=
<style type='text/css'>
#${id} {
  font: 10px sans-serif;
  shape-rendering: crispEdges;
  
}

.day {
  fill: #fff;
  stroke: #ccc;
}

.month {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
}


    
</style>
<div class='body'>

</div>
<div id='${id}' >    
  </div>

<div class='elx-script'>
var $, div, getDefaultOffDays, holidayItem, monthPath, sundayFn, testdate, url1, view;
 var leave_TypeArr,minYear,maxYear,csv4; //variable to be called by maybe
 
  $ = jQuery;
div = $("#${id}");

view = elx.host.getViewById("${id}");
var formatDate;
   var dateFormat=d3.time.format(view.typeinfo.formatDate);
testdate = "2013-12-31T16:00:00Z";
url1 = elx.host.utils.fixRepositoryUrl(view.typeinfo.url);
  
holidayItem = [];
var csv=${code};

console.log("csv",JSON.stringify(csv));
 d3.csv(url1, function(error, urlData) {
            var color, csv1, csv2, csv3, data, date, day, format, holiday_Color,
                legend, legendArr, legendDiv, month, percent, rect, sundayArr, sunday_Color, svg, totalSunday, week, year;
            csv1 = [];
            csv3 = [];
            csv2 = [];
            var width, height, cellSize;
            //Set frameHeight and width
            var frameWidth = view.typeinfo.width;
            var frameHeight = view.typeinfo.height;
            d3.select("#${id}").style("overflow-y", 'scroll').style("height", frameHeight + "px").style("width", frameWidth + "px");
            elx.host.setupAutoResize(div, function(w, h) {

                if (w !== view.typeinfo.width || h != view.typeinfo.height) {

                    d3.select("#${id}").style("overflow-y", 'scroll').style("height", h + "px").style("width", w + "px");
                }
            });

            //--
            height = 190;
            width = 1000;
            cellSize = view.typeinfo.cellSize;
            legendArr = view.typeinfo.legendArr;
            Leave_TypeArr = legendArr.split(",");
            Leave_TypeNum = Leave_TypeArr.length;
            if (0 < csv.length) {
                csv.forEach(function(d, i) {
                    csv1.push({
                        Event: d[view.typeinfo.data.eventCol],
                        Start_of_Leave: d[view.typeinfo.data.startTimeCol],
                        Num_Duration: d[view.typeinfo.data.durationCol],
                        Num_of_Days: d[view.typeinfo.data.numOfDaysCol],
                        Leave_Type: d[view.typeinfo.data.leaveTypeCol],
                        Partial: d[view.typeinfo.data.partialCol]
                    });
                });

                csv1.forEach(function(d, i) {
                    csv2.push({
                        Event: d.Event,
                        Start_of_Leave: d.Start_of_Leave,
                        Range_Days: _.range(0, d.Num_Duration),
                        Num_Duration: d.Num_Duration,
                        Num_of_Days: d.Num_of_Days,
                        Leave_Type: d.Leave_Type,
                        Partial: d.Partial
                    });
                });
                console.log("csv2", JSON.stringify(csv2));
                day = d3.time.format("%w");
                year = d3.time.format("%Y");
                month = d3.time.format("%m");
                date = d3.time.format("%e");
                week = d3.time.format("%U");
                percent = d3.format(".1%");
                format = d3.time.format("%Y-%m-%d");
                csv2.forEach(function(d, i) {
                    d.Range_Days.forEach(function(m, n) {
                        var Days_withLeaves, startLeave;
                        hPartial = "FULL";
                        var hClassRev = {
                            "0.5": "AM",
                            "0": "FULL",
                            "1": "PM"
                        };
                        if (m == 0) {
                            hPartial = d.Partial;
                        }
                        if (m == Math.floor(d.Num_Duration)) {

                            if (d.Partial == "PM") {
                                hPartial = d.Num_Duration % 1 + 0.5;

                                hPartial = hClassRev[hPartial];
                            }
                            if (d.Partial == "FULL") {
                                hPartial = d.Num_Duration % 1;
                                hPartial = hClassRev[hPartial];
                            }
                        }
                        startLeave = new Date(d.Start_of_Leave);
                        if (startLeave !== "Invalid Date") {
                            Days_withLeaves = format(new Date(year(startLeave), month(startLeave) - 1,
                                parseInt(date(startLeave)) + m));
                            csv3.push({
                                Date: Days_withLeaves,
                                Event: d.Event,
                                Leave_Type: d.Leave_Type,
                                Num_Duration: d.Num_Duration,
                                Num_of_Days: d.Num_of_Days,
                                Year: year(new Date(Days_withLeaves)),
                                Partial: hPartial
                            });
                        }
                    });
                });

            }
            totalSunday = [];
            year = d3.time.format("%Y");
            if (0 >= csv.length) {

                minYear = parseInt(year(new Date(urlData[0].Start_of_Leave)));
                maxYear = minYear;
            } else {
                var yearArr = _.pluck(csv3, 'Year');
                minYear = parseInt(_.min(yearArr));
                 maxYear = parseInt(_.max(yearArr));
            }
            sundayArr = sundayFn(minYear, maxYear, totalSunday);
            sundayArr.forEach(function(d, i) {
                csv3.push({
                    Date: d,
                    Event: "Sunday",
                    Num_Duration: 1,
                    Num_of_Days: 1,
                    Leave_Type: "Sunday",
                    Year: year(new Date(d)),
                    Partial: "FULL"
                });
            });
            var urlData1 = [];
            urlData.forEach(function(val, key) {
                urlData1.push({
                    Event: val.Event,
                    Date: val.Start_of_Leave,
                    Range_Days: _.range(0, val.Number_of_Days),
                    Num_Duration: val.Number_of_Days,
                    Leave_Type: val.Leave_Type,
                    Year: year(new Date(val.Start_of_Leave)),
                    Partial: "FULL"
                });
            });
            urlData1.forEach(function(val, key) {
                val.Range_Days.forEach(function(m, n) {
                    startLeave = new Date(val.Date);
                    if (startLeave !== "Invalid Date") {
                        year = d3.time.format("%Y");
                        month = d3.time.format("%m");
                        date = d3.time.format("%e");
                        format = d3.time.format("%Y-%m-%d");
                        Days_withLeaves = format(new Date(year(startLeave), month(startLeave) - 1,
                            parseInt(date(startLeave)) + m));
                        csv3.push({
                            Date: Days_withLeaves,
                            Event: val.Event,
                            Leave_Type: val.Leave_Type,
                            Num_Duration: val.Num_Duration,
                            Num_of_Days: val.Num_Duration,
                            Year: year(new Date(Days_withLeaves)),
                            Partial: "FULL"
                        });
                    }
                });
            });
         
            console.log("csv3", JSON.stringify(csv3));
            var csv5 = _.where(csv3, {
                Date: "2015-08-09"
            }); //for debugging
            console.log("csv5", JSON.stringify(csv5));
            var csv6 = cleanDuplicateRecords(csv5, ["Holiday", "Sunday"]);
            console.log("csv6", JSON.stringify(csv6));

            csv4 = cleanDuplicateRecords(csv3, ["Sunday", "Holiday"]);
            console.log("csv4", JSON.stringify(csv4));
            console.log("urlData", JSON.stringify(urlData));

    
function getDefaultOffDays(year) {
    var offdays = new Array();
    i = 0;
    for (month = 0; month < 12; month++) {
        tdays = new Date(year, month + 1, 0).getDate();
        for (date = 1; date <= tdays; date++) {
            smonth = (month < 9) ? "0" + (month + 1) : (month + 1);
            sdate = (date < 10) ? "0" + date : date;
            dd = year + "-" + smonth + "-" + sdate;
            var day = new Date(year, month, date);
            if (day.getDay() == 0) {
                offdays[i++] = dd;
            }
        }
    }

    return offdays;
}

function sundayFn(from, to, totalSunday) {
    (_.range(from, to + 1)).forEach(function(d, i) {

        sunArr = getDefaultOffDays(d);
        totalSunday.push(sunArr);
    })
    return _.flatten(totalSunday);
}
test = 1;
setTimeout(maybe(width, height, cellSize), 0);
setTimeout(appendDefs(Leave_TypeArr), 0);
// setTimeout(autoResize,0);
});

function maybe(width, height, cellSize) {

    function colorLegend(d) {
        return "url(#leave_" + add_BetStr(d) + ":m_FULL)";
    }

    holiday_Color = "#FFFF00";
    sunday_Color = "#0000FF";
    day = d3.time.format("%w");
    year = d3.time.format("%Y");
    month = d3.time.format("%m");
    date = d3.time.format("%e");
    week = d3.time.format("%U");
    percent = d3.format(".1%");
    format = d3.time.format("%Y-%m-%d");
    svg = d3.select("#${id}").selectAll("svg").data(d3.range(minYear, maxYear + 1)).enter()
        .append("svg")
        .attr("width", width).attr("height", height).attr("class", "RdYlGn").append("g")
        .attr("transform", "translate(" + ((width - cellSize * 53) / 2) + "," + (10) + ")");

    svg.append("text").attr("transform", "translate(-40," + cellSize * 3.5 + ")rotate(-90)").style("text-anchor", "middle").text(function(d) {
        return d;
    });
    var dayArr = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

    var daySvg = svg.selectAll(".RdYlGn").data(dayArr).enter().append("text").attr("transform", function(d, i) {
            return "translate(-15," + (cellSize * i + 10) + ")";
        }).style("text-anchor", "middle")
        .text(function(d, i) {

            return d;
        });
    rect = svg.selectAll(".day").data(function(d) {

        return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1));
    }).enter().append("rect").attr("class", "day").attr("width", cellSize).attr("height", cellSize).attr("x", function(d) {
        return week(d) * cellSize;
    }).attr("y", function(d) {
        return day(d) * cellSize;
    }).datum(format);
    rect.append("title").text(function(d) {
        return dateFormat(new Date(d));
    });

    svg.selectAll(".month").data(function(d) {
        return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1));
    }).enter().append("path").attr("class", "month").attr("d", monthPath);
    data = d3.nest().key(function(d) {
        return d.Date;
    }).rollup(function(d) {
        return {
            Partial: d[0].Partial,
            Event: d[0].Event,
            Num_Duration: d[0].Num_Duration,
            Num_of_Days: d[0].Num_of_Days,
            Leave_Type: add_BetStr(d[0].Leave_Type)
        };
    }).map(csv4);

    rect.filter(function(d) {
            return d in data;
        }).style("fill", function(d) {
            return "url(#leave_" + data[d].Leave_Type + ":m_" + data[d].Partial + ")";
        })
        .select("title").text(function(d) {
            var plural = (data[d].Num_of_Days > 1) ? " days" : " day";
            return dateFormat(new Date(d)) + ": " + data[d].Event + ", " + data[d].Leave_Type + ", " + data[d].Num_of_Days + plural;
        });
    legendDiv = d3.select("#${id}").selectAll("svg.RdYlGn");
    legend = legendDiv.append("svg").attr("class", "RdYlGn").attr("width", 960).append("g")
        .attr("class", "Legend").attr("x", 20).attr("y", 0).attr("height", 0).attr("width", 960)
        .attr("transform", "translate(" + 20 + "," + 140 + ")");
    legend.selectAll("g").data(Leave_TypeArr).enter().append("g").each(function(d, i) {
        var g;
        g = d3.select(this);
        var xIndex = Math.floor(i / 2);
        var yIndex = i % 2;
        g.append("rect").attr("x", xIndex * view.typeinfo.legendSpacing).attr("y", yIndex * 15 + 5)
            .attr("width", 10).attr("height", 10)
            .style("fill", function(d) {
                return colorLegend(d);
            });
        g.append("text").attr("x", xIndex * view.typeinfo.legendSpacing + 10).attr("y", yIndex * 15 + 12).attr("height", 30)
            .attr("width", 15).text(d.split("Leave")[0]);
    });
    // d3.select(self.frameElement).style("height", "2910px");

    function monthPath(t0) {
        var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
            d0 = +day(t0),
            w0 = +week(t0),
            d1 = +day(t1),
            w1 = +week(t1);

        return "M" + (w0 + 1) * cellSize + "," + d0 * cellSize + "H" + w0 * cellSize + "V" + 7 * cellSize + "H" + w1 * cellSize + "V" + (d1 + 1) * cellSize + "H" + (w1 + 1) * cellSize + "V" + 0 + "H" + (w0 + 1) * cellSize + "Z";
    }
}

function autoResize() {
    elx.host.setupAutoResize(div, function(w, h) {
             c = view.typeinfo.cellSize;

        if (w !== view.typeinfo.width || h != view.typeinfo.height) {
            view.typeinfo.height = h;
            view.typeinfo.width = w;

            $("#${id}").empty();
        }
        //setTimeOut(maybe(w,h,c),0);
        maybe(w, h, c);
    });
}


function appendDefs(leaveArr) {
    var svgTest = d3.select("#${id}").append("svg");
    var partialObj = {
        "AM": {
            stopColor1: function(d) {
                return colorArr(d);
            },
            stopColor2: function(d) {
                return '#ffffff';
            }
        },
        "PM": {
            stopColor1: function(d) {
                return '#ffffff';
            },
            stopColor2: function(d) {
                return colorArr(d);
            }
        },
        "FULL": {
            stopColor1: function(d) {
                return colorArr(d);
            },
            stopColor2: function(d) {
                return colorArr(d);
            }
        }
    };
    var colorArr = d3.scale.category20();
    var defsTag = svgTest.append("svg:defs");
    _.each(leaveArr, function(d, i) {
        _.each(["AM", "PM", "FULL"], function(m, n) {
            var linearGrad = defsTag.append("svg:linearGradient").attr("id", "leave_" + add_BetStr(d) + ":m_" + m).attr("x1", "0%").attr("x2", "100%")
                .attr("y1", "0%").attr("y2", "0%");
            linearGrad.append("svg:stop").attr("offset", "50%").style({
                'stop-color': partialObj[m].stopColor1(d),
                'stop-opacity': 1
            });
            linearGrad.append("svg:stop").attr("offset", "50%").style({
                'stop-color': partialObj[m].stopColor2(d),
                'stop-opacity': 1
            });
        })
        var xIndex = Math.floor(i / 2);
        var yIndex = i % 2;
        //where
    })
}

function add_BetStr(stringText) {
    var stringArr = stringText.split(" ");
    if (stringArr.length > 1) {
        return stringArr.join("_");
    } else return stringText;
}

function testReadSVG(svg) {
        svg.append("svg:rect").attr("x", 1 * view.typeinfo.legendSpacing).attr("y", 1 * 15 + 5)
            .attr("width", 20)
            .attr("height", 20)
            .style("fill", "url(#leave_Sunday:m_PM)");
    }
    // testReadSVG(svgMess);

function cleanDuplicateRecords(data, priorityArr) {
    var cleaned = [];
    var nest = d3.nest().key(function(d) {
        return d.Date;
    }).rollup(function(d) {
        var priorLeaveType, priorNum_Duration, priorNum_of_Days, priorEvent, priorPartial;
        var thereIsPriority = false;
        if (d.length > 1) {

            var dataArr = [];
            _.each(d, function(f, g) {

                keyName = f.Leave_Type;
                var dataObj = {};
                dataObj[keyName] = {
                    Duration: f.Num_Duration,
                    NumOfDays: f.priorNum_of_Days,
                    Partial: f.Partial,
                    Event: f.Event
                };
                dataArr.push(dataObj);
            });
        }

        _.each(dataArr, function(m, n) {

            var checkForPriorityInside = (_.intersection(Object.keys(m), priorityArr)).length;

            if (checkForPriorityInside > 0) thereIsPriority = true;
        });
        if (thereIsPriority) {
            console.log("dataArr", JSON.stringify(dataArr));
            var boolBreak = false;
            for (var n = 0; n < dataArr.length; n++) {

                if (boolBreak == true) break;
                else {

                    for (var i = 0; i < priorityArr.length; i++) {
                        if (_.first(Object.keys(dataArr[n])) == priorityArr[i]) {
                            var priorPropertyName = priorityArr[i];
                            priorLeaveType = priorityArr[i], priorNum_Duration = dataArr[n][priorPropertyName].Duration, priorEvent = dataArr[n][priorPropertyName].Event,
                                priorPartial = dataArr[n][priorPropertyName].Partial,
                                priorNum_of_Days = 1;
                            boolBreak = true;
                            break;
                        }
                    }
                }
            }
        } else {
            priorLeaveType = d[0].Leave_Type;
            priorNum_Duration = d[0].Num_Duration;
            priorEvent = d[0].Event;
            priorPartial = d[0].Partial;
            priorNum_of_Days = d[0].Num_of_Days;
        }

        var obj = {
            Event: priorEvent,
            Date: d[0].Date,
            Num_Duration: priorNum_Duration,
            Num_of_Days: priorNum_of_Days,
            Leave_Type: priorLeaveType,
            Year: d[0].Year,
            Partial: priorPartial
        };
        cleaned.push(obj);
    }).entries(data);
    return cleaned;
}
  
  
</div>
========